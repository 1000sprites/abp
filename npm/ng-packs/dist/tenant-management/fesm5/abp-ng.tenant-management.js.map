{"version":3,"file":"abp-ng.tenant-management.js","sources":["ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/resolvers/tenants.resolver.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/constants/routes.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts"],"sourcesContent":["import { TenantManagement } from '../models/tenant-management';\n\nexport class TenantManagementGet {\n  static readonly type = '[TenantManagement] Get';\n}\n\nexport class TenantManagementGetById {\n  static readonly type = '[TenantManagement] Get By Id';\n  constructor(public payload: string) {}\n}\n\nexport class TenantManagementAdd {\n  static readonly type = '[TenantManagement] Add';\n  constructor(public payload: TenantManagement.AddRequest) {}\n}\n\nexport class TenantManagementUpdate {\n  static readonly type = '[TenantManagement] Update';\n  constructor(public payload: TenantManagement.UpdateRequest) {}\n}\n\nexport class TenantManagementDelete {\n  static readonly type = '[TenantManagement] Delete';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { TenantManagement } from '../models/tenant-management';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<TenantManagement.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/multi-tenancy/tenant',\n    };\n\n    return this.rest.request<null, TenantManagement.Response>(request);\n  }\n\n  getById(id: string): Observable<ABP.BasicItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/multi-tenancy/tenant/${id}`,\n    };\n\n    return this.rest.request<null, ABP.BasicItem>(request);\n  }\n\n  delete(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenant/${id}`,\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  add(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\n    const request: Rest.Request<TenantManagement.AddRequest> = {\n      method: 'POST',\n      url: `/api/multi-tenancy/tenant`,\n      body,\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  update(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\n    const url = `/api/multi-tenancy/tenant/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  getDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenant/${id}/defaultConnectionString`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'GET',\n      responseType: Rest.ResponseType.Text,\n      url,\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\n  }\n\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\n    const url = `/api/multi-tenancy/tenant/${payload.id}/defaultConnectionString`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'PUT',\n      url,\n      params: { defaultConnectionString: payload.defaultConnectionString },\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap } from 'rxjs/operators';\nimport {\n  TenantManagementAdd,\n  TenantManagementDelete,\n  TenantManagementGet,\n  TenantManagementGetById,\n  TenantManagementUpdate,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementService } from '../services/tenant-management.service';\nimport { ABP } from '@abp/ng.core';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\n    return result.items || [];\n  }\n\n  constructor(private tenantManagementService: TenantManagementService) {}\n\n  @Action(TenantManagementGet)\n  get({ patchState }: StateContext<TenantManagement.State>) {\n    return this.tenantManagementService.get().pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(TenantManagementGetById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: TenantManagementGetById) {\n    return this.tenantManagementService.getById(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(TenantManagementDelete)\n  delete({ dispatch }: StateContext<TenantManagement.State>, { payload }: TenantManagementDelete) {\n    return this.tenantManagementService.delete(payload).pipe(switchMap(() => dispatch(new TenantManagementGet())));\n  }\n\n  @Action(TenantManagementAdd)\n  add({ dispatch }: StateContext<TenantManagement.State>, { payload }: TenantManagementAdd) {\n    return this.tenantManagementService.add(payload).pipe(switchMap(() => dispatch(new TenantManagementGet())));\n  }\n\n  @Action(TenantManagementUpdate)\n  update({ dispatch, getState }: StateContext<TenantManagement.State>, { payload }: TenantManagementUpdate) {\n    return dispatch(new TenantManagementGetById(payload.id)).pipe(\n      switchMap(() => this.tenantManagementService.update({ ...getState().selectedItem, ...payload })),\n      switchMap(() => dispatch(new TenantManagementGet())),\n    );\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  TenantManagementAdd,\n  TenantManagementDelete,\n  TenantManagementGetById,\n  TenantManagementUpdate,\n} from '../../actions/tenant-management.actions';\nimport { TenantManagementService } from '../../services/tenant-management.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n})\nexport class TenantsComponent {\n  @Select(TenantManagementState.get)\n  datas$: Observable<ABP.BasicItem[]>;\n\n  selected: ABP.BasicItem;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  useSharedDatabase: boolean;\n\n  selectedModalContent: {\n    title: string;\n    template: TemplateRef<any>;\n    onSave: () => void;\n  };\n\n  get showInput(): boolean {\n    return !this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('modalWrapper', { static: false })\n  modalWrapper: TemplateRef<any>;\n\n  @ViewChild('mTemplateConnStr', { static: false })\n  mTemplateConnStr: TemplateRef<any>;\n\n  @ViewChild('mTemplateFeatures', { static: false })\n  mTemplateFeatures: TemplateRef<any>;\n\n  @ViewChild('mTemplateTenant', { static: false })\n  mTemplateTenant: TemplateRef<any>;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantManagementService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  openModal() {\n    this.modalService.open(this.modalWrapper);\n  }\n\n  private createTenantForm() {\n    this.tenantForm = this.fb.group({\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\n    });\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this.useSharedDatabase,\n      defaultConnectionString: this.defaultConnectionString || '',\n    });\n  }\n\n  onEditConnStr(id: string) {\n    this.selectedModalContent = {\n      title: this.selected && this.selected.id ? 'AbpTenantManagement::Edit' : 'AbpTenantManagement::NewTenant',\n      template: this.mTemplateConnStr,\n      onSave: () => this.saveConnStr,\n    };\n    this.store\n      .dispatch(new TenantManagementGetById(id))\n      .pipe(\n        pluck('TenantManagementState', 'selectedItem'),\n        switchMap(selected => {\n          this.selected = selected;\n          return this.tenantService.getDefaultConnectionString(id);\n        }),\n      )\n      .subscribe(fetchedConnectionString => {\n        this.useSharedDatabase = fetchedConnectionString ? false : true;\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\n        this.createDefaultConnectionStringForm();\n        this.openModal();\n      });\n  }\n\n  saveConnStr() {\n    this.tenantService\n      .updateDefaultConnectionString({ id: this.selected.id, defaultConnectionString: this.connectionString })\n      .pipe(take(1))\n      .subscribe(() => this.modalService.dismissAll());\n  }\n\n  onManageFeatures(id: string) {\n    this.selectedModalContent = {\n      title: this.selected && this.selected.id ? 'AbpTenantManagement::Edit' : 'AbpTenantManagement::NewTenant',\n      template: this.mTemplateFeatures,\n      onSave: () => {},\n    };\n    this.openModal();\n  }\n\n  onAdd() {\n    this.selected = {} as ABP.BasicItem;\n    this.createTenantForm();\n    this.openModal();\n    this.selectedModalContent = {\n      title: 'AbpTenantManagement::NewTenant',\n      template: this.mTemplateTenant,\n      onSave: () => this.saveTenant,\n    };\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new TenantManagementGetById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.selectedModalContent = {\n          title: 'AbpTenantManagement::Edit',\n          template: this.mTemplateTenant,\n          onSave: () => this.saveTenant,\n        };\n        this.createTenantForm();\n        this.openModal();\n      });\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid) return;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new TenantManagementUpdate({ ...this.tenantForm.value, id: this.selected.id })\n          : new TenantManagementAdd(this.tenantForm.value),\n      )\n      .subscribe(() => this.modalService.dismissAll());\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpTenantManagement::TenantDeletionConfirmationMessage', 'AbpTenantManagement::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new TenantManagementDelete(id));\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementGet } from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementState } from '../states/tenant-management.state';\n\n@Injectable()\nexport class TenantsResolver implements Resolve<TenantManagement.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const data = this.store.selectSnapshot(TenantManagementState.get);\n    return data && data.length\n     ? null \n     : this.store.dispatch(new TenantManagementGet());\n  }\n}\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsResolver } from './resolvers/tenants.resolver';\nimport { TenantsComponent } from './components/tenants/tenants.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: 'tenants',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpTenantManagement.Tenants' },\n    children: [{ path: '', component: TenantsComponent, resolve: [TenantsResolver] }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [TenantsResolver],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { TableModule } from 'primeng/table';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    CoreModule,\n    TableModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n  ],\n})\nexport class TenantManagementModule {}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\nexport const TENANT_MANAGEMENT_ROUTES = [\n  {\n    name: 'TenantManagement',\n    path: 'tenant-management',\n    parentName: 'Administration',\n    layout: eLayoutType.application,\n    children: [\n      {\n        path: 'tenants',\n        name: 'Tenants',\n        order: 1,\n        requiredPolicy: 'AbpTenantManagement.Tenants',\n        parentName: 'TenantManagement',\n      },\n    ],\n  },\n] as ABP.FullRoute[];\n","import { ABP } from '@abp/ng.core';\n\nexport namespace TenantManagement {\n  export interface State {\n    result: Response;\n    selectedItem: Item;\n  }\n\n  export type Response = ABP.PagedResponse<Item>;\n\n  export interface Item {\n    id: string;\n    name: string;\n  }\n\n  export interface AddRequest {\n    name: string;\n  }\n\n  export interface UpdateRequest extends AddRequest {\n    id: string;\n  }\n\n  export interface DefaultConnectionStringRequest {\n    id: string;\n    defaultConnectionString: string;\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;AAEA;IAAA;KAEC;IADiB,wBAAI,GAAG,wBAAwB,CAAC;IAClD,0BAAC;CAFD,IAEC;;IAIC,iCAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;KAAI;IADtB,4BAAI,GAAG,8BAA8B,CAAC;IAExD,8BAAC;CAHD,IAGC;;IAIC,6BAAmB,OAAoC;QAApC,YAAO,GAAP,OAAO,CAA6B;KAAI;IAD3C,wBAAI,GAAG,wBAAwB,CAAC;IAElD,0BAAC;CAHD,IAGC;;IAIC,gCAAmB,OAAuC;QAAvC,YAAO,GAAP,OAAO,CAAgC;KAAI;IAD9C,2BAAI,GAAG,2BAA2B,CAAC;IAErD,6BAAC;CAHD,IAGC;;IAIC,gCAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;KAAI;IADtB,2BAAI,GAAG,2BAA2B,CAAC;IAErD,6BAAC;CAHD;;;;;;ACrBA;IASE,iCAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;KAAI;;;;IAEzC,qCAAG;;;IAAH;;YACQ,OAAO,GAAuB;YAClC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,2BAA2B;SACjC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAkC,OAAO,CAAC,CAAC;KACpE;;;;;IAED,yCAAO;;;;IAAP,UAAQ,EAAU;;YACV,OAAO,GAAuB;YAClC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,+BAA6B,EAAI;SACvC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAsB,OAAO,CAAC,CAAC;KACxD;;;;;IAED,wCAAM;;;;IAAN,UAAO,EAAU;;YACT,OAAO,GAAuB;YAClC,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,+BAA6B,EAAI;SACvC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAa,OAAO,CAAC,CAAC;KAC/C;;;;;IAED,qCAAG;;;;IAAH,UAAI,IAAiC;;YAC7B,OAAO,GAA8C;YACzD,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,2BAA2B;YAChC,IAAI,MAAA;SACL;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAA6C,OAAO,CAAC,CAAC;KAC/E;;;;;IAED,wCAAM;;;;IAAN,UAAO,IAAoC;;YACnC,GAAG,GAAG,+BAA6B,IAAI,CAAC,EAAI;QAClD,OAAO,IAAI,CAAC,EAAE,CAAC;;YAET,OAAO,GAAiD;YAC5D,MAAM,EAAE,KAAK;YACb,GAAG,KAAA;YACH,IAAI,MAAA;SACL;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAA6C,OAAO,CAAC,CAAC;KAC/E;;;;;IAED,4DAA0B;;;;IAA1B,UAA2B,EAAU;;YAC7B,GAAG,GAAG,+BAA6B,EAAE,6BAA0B;;YAE/D,OAAO,GAAkE;YAC7E,MAAM,EAAE,KAAK;YACb,YAAY;YACZ,GAAG,KAAA;SACJ;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAA0D,OAAO,CAAC,CAAC;KAC5F;;;;;IAED,+DAA6B;;;;IAA7B,UAA8B,OAAwD;;YAC9E,GAAG,GAAG,+BAA6B,OAAO,CAAC,EAAE,6BAA0B;;YAEvE,OAAO,GAAkE;YAC7E,MAAM,EAAE,KAAK;YACb,GAAG,KAAA;YACH,MAAM,EAAE,EAAE,uBAAuB,EAAE,OAAO,CAAC,uBAAuB,EAAE;SACrE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAuD,OAAO,CAAC,CAAC;KACzF;;gBA5EF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBALQ,WAAW;;;kCAFpB;CAKA;;;;;;;ICkBE,+BAAoB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;KAAI;;;;;IAJjE,yBAAG;;;;IAAV,UAAW,EAAkC;YAAhC,kBAAM;QACjB,OAAO,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;KAC3B;;;;;IAKD,mCAAG;;;;IAAH,UAAI,EAAoD;YAAlD,0BAAU;QACd,OAAO,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,IAAI,CAC5C,GAAG;;;;QAAC,UAAA,MAAM;YACR,OAAA,UAAU,CAAC;gBACT,MAAM,QAAA;aACP,CAAC;SAAA,EACH,CACF,CAAC;KACH;;;;;;IAGD,uCAAO;;;;;IAAP,UAAQ,EAAoD,EAAE,EAAoC;YAAxF,0BAAU;YAA4C,oBAAO;QACrE,OAAO,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACvD,GAAG;;;;QAAC,UAAA,YAAY;YACd,OAAA,UAAU,CAAC;gBACT,YAAY,cAAA;aACb,CAAC;SAAA,EACH,CACF,CAAC;KACH;;;;;;IAGD,sCAAM;;;;;IAAN,UAAO,EAAkD,EAAE,EAAmC;YAArF,sBAAQ;YAA4C,oBAAO;QAClE,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS;;;QAAC,cAAM,OAAA,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,GAAA,EAAC,CAAC,CAAC;KAChH;;;;;;IAGD,mCAAG;;;;;IAAH,UAAI,EAAkD,EAAE,EAAgC;YAAlF,sBAAQ;YAA4C,oBAAO;QAC/D,OAAO,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS;;;QAAC,cAAM,OAAA,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,GAAA,EAAC,CAAC,CAAC;KAC7G;;;;;;IAGD,sCAAM;;;;;IAAN,UAAO,EAA4D,EAAE,EAAmC;QADxG,iBAMC;YALQ,sBAAQ,EAAE,sBAAQ;YAA4C,oBAAO;QAC5E,OAAO,QAAQ,CAAC,IAAI,uBAAuB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAC3D,SAAS;;;QAAC,cAAM,OAAA,KAAI,CAAC,uBAAuB,CAAC,MAAM,cAAM,QAAQ,EAAE,CAAC,YAAY,EAAK,OAAO,EAAG,GAAA,EAAC,EAChG,SAAS;;;QAAC,cAAM,OAAA,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,GAAA,EAAC,CACrD,CAAC;KACH;IArCDA;QADC,MAAM,CAAC,mBAAmB,CAAC;;;;oDAS3B;IAGDA;QADC,MAAM,CAAC,uBAAuB,CAAC;;iDAC2C,uBAAuB;;wDAQjG;IAGDA;QADC,MAAM,CAAC,sBAAsB,CAAC;;iDACyC,sBAAsB;;uDAE7F;IAGDA;QADC,MAAM,CAAC,mBAAmB,CAAC;;iDACyC,mBAAmB;;oDAEvF;IAGDA;QADC,MAAM,CAAC,sBAAsB,CAAC;;iDACmD,sBAAsB;;uDAKvG;IA5CDA;QADC,QAAQ,EAAE;;;;0CAGV;IAJU,qBAAqB;QAJjC,KAAK,CAAyB;YAC7B,IAAI,EAAE,uBAAuB;YAC7B,QAAQ,qBAAE,EAAE,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,EAA0B;SACrE,CAAC;yCAO6C,uBAAuB;OANzD,qBAAqB,CA+CjC;IAAD,4BAAC;CAAA;;;;;;;ICHC,0BACU,mBAAwC,EACxC,aAAsC,EACtC,YAAsB,EACtB,EAAe,EACf,KAAY;QAJZ,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAyB;QACtC,iBAAY,GAAZ,YAAY,CAAU;QACtB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAO;KAClB;IA1BJ,sBAAI,uCAAS;;;;QAAb;YACE,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;SACzE;;;OAAA;IAED,sBAAI,8CAAgB;;;;QAApB;YACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,KAAK,CAAC;SAC9E;;;OAAA;;;;IAsBD,oCAAS;;;IAAT;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3C;;;;;IAEO,2CAAgB;;;;IAAxB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;KACJ;;;;;IAEO,4DAAiC;;;;IAAzC;QACE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/C,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,uBAAuB,EAAE,IAAI,CAAC,uBAAuB,IAAI,EAAE;SAC5D,CAAC,CAAC;KACJ;;;;;IAED,wCAAa;;;;IAAb,UAAc,EAAU;QAAxB,iBAqBC;QApBC,IAAI,CAAC,oBAAoB,GAAG;YAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,2BAA2B,GAAG,gCAAgC;YACzG,QAAQ,EAAE,IAAI,CAAC,gBAAgB;YAC/B,MAAM;;;YAAE,cAAM,OAAA,KAAI,CAAC,WAAW,GAAA,CAAA;SAC/B,CAAC;QACF,IAAI,CAAC,KAAK;aACP,QAAQ,CAAC,IAAI,uBAAuB,CAAC,EAAE,CAAC,CAAC;aACzC,IAAI,CACH,KAAK,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAC9C,SAAS;;;;QAAC,UAAA,QAAQ;YAChB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,KAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;SAC1D,EAAC,CACH;aACA,SAAS;;;;QAAC,UAAA,uBAAuB;YAChC,KAAI,CAAC,iBAAiB,GAAG,uBAAuB,GAAG,KAAK,GAAG,IAAI,CAAC;YAChE,KAAI,CAAC,uBAAuB,GAAG,uBAAuB,GAAG,uBAAuB,GAAG,EAAE,CAAC;YACtF,KAAI,CAAC,iCAAiC,EAAE,CAAC;YACzC,KAAI,CAAC,SAAS,EAAE,CAAC;SAClB,EAAC,CAAC;KACN;;;;IAED,sCAAW;;;IAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa;aACf,6BAA6B,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACvG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS;;;QAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,GAAA,EAAC,CAAC;KACpD;;;;;IAED,2CAAgB;;;;IAAhB,UAAiB,EAAU;QACzB,IAAI,CAAC,oBAAoB,GAAG;YAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,2BAA2B,GAAG,gCAAgC;YACzG,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,MAAM;;;YAAE,eAAQ,CAAA;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;;;IAED,gCAAK;;;IAAL;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,sBAAG,EAAE,EAAiB,CAAC;QACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,GAAG;YAC1B,KAAK,EAAE,gCAAgC;YACvC,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,MAAM;;;YAAE,cAAM,OAAA,KAAI,CAAC,UAAU,GAAA,CAAA;SAC9B,CAAC;KACH;;;;;IAED,iCAAM;;;;IAAN,UAAO,EAAU;QAAjB,iBAcC;QAbC,IAAI,CAAC,KAAK;aACP,QAAQ,CAAC,IAAI,uBAAuB,CAAC,EAAE,CAAC,CAAC;aACzC,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC;aACpD,SAAS;;;;QAAC,UAAA,QAAQ;YACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,oBAAoB,GAAG;gBAC1B,KAAK,EAAE,2BAA2B;gBAClC,QAAQ,EAAE,KAAI,CAAC,eAAe;gBAC9B,MAAM;;;gBAAE,cAAM,OAAA,KAAI,CAAC,UAAU,GAAA,CAAA;aAC9B,CAAC;YACF,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,SAAS,EAAE,CAAC;SAClB,EAAC,CAAC;KACN;;;;IAED,qCAAU;;;IAAV;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK;YAAE,OAAO;QAEnC,IAAI,CAAC,KAAK;aACP,QAAQ,CACP,IAAI,CAAC,QAAQ,CAAC,EAAE;cACZ,IAAI,sBAAsB,cAAM,IAAI,CAAC,UAAU,CAAC,KAAK,IAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAG;cAC9E,IAAI,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CACnD;aACA,SAAS;;;QAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,UAAU,EAAE,GAAA,EAAC,CAAC;KACpD;;;;;;IAED,iCAAM;;;;;IAAN,UAAO,EAAU,EAAE,IAAY;QAA/B,iBAUC;QATC,IAAI,CAAC,mBAAmB;aACrB,IAAI,CAAC,wDAAwD,EAAE,iCAAiC,EAAE;YACjG,yBAAyB,EAAE,CAAC,IAAI,CAAC;SAClC,CAAC;aACD,SAAS;;;;QAAC,UAAC,MAAsB;YAChC,IAAI,MAAM,8BAA6B;gBACrC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;aACrD;SACF,EAAC,CAAC;KACN;;gBA7JF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,4jLAAuC;iBACxC;;;;gBAnBQ,mBAAmB;gBAanB,uBAAuB;gBAVvB,QAAQ;gBADR,WAAW;gBAEH,KAAK;;;+BA4CnB,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;mCAG3C,SAAS,SAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;oCAG/C,SAAS,SAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;kCAGhD,SAAS,SAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;IAnC/CA;QADC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC;kCAC1B,UAAU;oDAAkB;IAwJtC,uBAAC;CA9JD;;;;;;ACjBA;IASE,yBAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;KAAI;;;;IAEpC,iCAAO;;;IAAP;;YACQ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,qBAAqB,CAAC,GAAG,CAAC;QACjE,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM;cACvB,IAAI;cACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;KACnD;;gBATF,UAAU;;;;gBALF,KAAK;;IAed,sBAAC;CAVD;;;;;;ACPA,SAYU,EAAE,cAAc,EAAE,6BAA6B,EAAE;;IANrD,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;IACtD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,sBAAsB;QACjC,WAAW,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;QACzC,IAAI,IAAmD;QACvD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;KAClF;CACF;AAED;IAAA;KAK6C;;gBAL5C,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,eAAe,CAAC;iBAC7B;;IAC2C,oCAAC;CAL7C;;;;;;ACjBA;IAUA;KAWsC;;gBAXrC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE;wBACP,6BAA6B;wBAC7B,UAAU,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC;wBAC9C,UAAU;wBACV,WAAW;wBACX,iBAAiB;wBACjB,iBAAiB;qBAClB;iBACF;;IACoC,6BAAC;CAXtC;;;;;;;ACRA,IAAa,wBAAwB,sBAAG;IACtC;QACE,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,mBAAmB;QACzB,UAAU,EAAE,gBAAgB;QAC5B,MAAM;QACN,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,CAAC;gBACR,cAAc,EAAE,6BAA6B;gBAC7C,UAAU,EAAE,kBAAkB;aAC/B;SACF;KACF;CACF,EAAmB;;;;;;AChBpB,IAAiB,gBAAgB,CAyBhC;AAzBD,WAAiB,gBAAgB;;;;IAC/B,oBAGC;;;;;IAID,mBAGC;;;;;IAED,yBAEC;;;;;IAED,4BAEC;;;;;IAED,6CAGC;;AACH,CAAC,EAzBgB,gBAAgB,KAAhB,gBAAgB,QAyBhC;;;;"}