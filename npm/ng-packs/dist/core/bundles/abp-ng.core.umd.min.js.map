{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/config.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/core.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","ar","next","done","push","value","error","__spread","concat","PatchRouteByName","name","newValue","type","ConfigGetAppConfiguration","ProfileGet","ProfileUpdate","payload","ProfileChangePassword","RestOccurError","SessionSetLanguage","RestService","http","store","handleError","err","dispatch","console","NEVER","request","config","api","_this","_a","observe","throwErr","url","selectSnapshot","ConfigState","getApiUrl","method","options","pipe","take","catchError","throwError","Injectable","args","providedIn","HttpClient","Store","ProfileService","rest","get","update","body","changePassword","ProfileState","profileService","getProfile","profile","profileGet","patchState","tap","profileUpdate","_b","_","tslib_1.__decorate","Action","Selector","State","defaults","ApplicationConfigurationService","getConfiguration","SessionState","getLanguage","language","sessionSetLanguage","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","path","sort","a","b","order","appConfigurationService","getAll","state","getOne","createSelector","ConfigState_1","getDeep","keys","split","Array","isArray","Error","reduce","acc","val","environment","apis","getSetting","snq","setting","values","getGrantedPolicy","condition","replace","selector","getPolicy","auth","grantedPolicies","forEach","eval","getCopy","interpolateParams","_i","defaultResourceName","localization","copy","param","index","addData","configuration","switchMap","of","patchRoute","getState","findIndex","patchRouteDeep","parentUrl","child","uuid","Math","random","toString","getInitialData","injector","toPromise","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","router","events","subscribe","event","NavigationEnd","segments","parseUrl","root","primary","layouts","requirements","layout_1","findLayout","layout","l","find","toLowerCase","ngOnDestroy","Component","template","Router","Select","Observable","wrapper","RouterOutletComponent","PermissionDirective","elRef","renderer","ngOnInit","select","isGranted","removeChild","parentElement","nativeElement","Directive","ElementRef","Optional","Renderer2","Input","VisibilityDirective","completed$","ngAfterViewInit","observer","MutationObserver","mutations","mutation","from","childNodes","node","HTMLElement","setTimeout","disconnect","focusedElement","childList","AuthGuard","oauthService","canActivate","hasValidAccessToken","Navigate","redirectUrl","OAuthService","PermissionGuard","resource","data","ApiInterceptor","oAuthService","intercept","headers","token","getAccessToken","has","lang","handle","clone","setHeaders","Rest","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","initialized","matches","actionMatcher","InitState","UpdateState","transformRoutes","setValue","Inject","abpRoutes","transformed","component","loadChildren","abpPackage","abp","setUrls","ConfigService","LazyLoadService","loadedLibraries","load","content","targetQuery","position","library","slice","lastIndexOf","asObservable","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","LocalizationService","instant","environmentFactory","configFactory","ENVIRONMENT","CONFIG","LocalizationPipe","transform","distinctUntilChanged","Pipe","pure","CoreModule","forRoot","ngModule","providers","provide","NGXS_PLUGINS","useClass","multi","useValue","HTTP_INTERCEPTORS","APP_INITIALIZER","deps","Injector","useFactory","NgModule","imports","NgxsModule","forFeature","NgxsStoragePluginModule","NgxsRouterPluginModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ABP } from '../models';\n\nexport class PatchRouteByName {\n  static readonly type = '[Config] Patch Route By Name';\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\n}\n\nexport class ConfigGetAppConfiguration {\n  static readonly type = '[Config] Get App Configuration';\n}\n","import { Profile } from '../models';\n\nexport class ProfileGet {\n  static readonly type = '[Profile] Get';\n}\n\nexport class ProfileUpdate {\n  static readonly type = '[Profile] Update';\n  constructor(public payload: Profile.Response) {}\n}\n\nexport class ProfileChangePassword {\n  static readonly type = '[Profile] Change Password';\n  constructor(public payload: Profile.ChangePasswordRequest) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport class RestOccurError {\n  static readonly type = '[Rest] Error';\n  constructor(public payload: HttpErrorResponse | any) {}\n}\n","export class SessionSetLanguage {\n  static readonly type = '[Session] Set Language';\n  constructor(public payload: string) {}\n}\n","import { HttpClient, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { NEVER, Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { Rest } from '../models/rest';\nimport { ConfigState } from '../states';\nimport { RestOccurError } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestService {\n  constructor(private http: HttpClient, private store: Store) {}\n\n  handleError(err: any): Observable<any> {\n    this.store.dispatch(new RestOccurError(err));\n    console.error(err);\n    return NEVER;\n  }\n\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config: Rest.Config = {}, api?: string): Observable<R> {\n    const { observe = Rest.Observe.Body, throwErr } = config;\n    const url = api || this.store.selectSnapshot(ConfigState.getApiUrl()) + request.url;\n    const { method, ...options } = request;\n    return this.http.request<T>(method, url, { observe, ...options } as any).pipe(\n      observe === Rest.Observe.Body ? take(1) : null,\n      catchError(err => {\n        if (throwErr) {\n          return throwError(err);\n        }\n\n        return this.handleError(err);\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService } from './rest.service';\nimport { Profile, Rest } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<Profile.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/profile',\n    };\n\n    return this.rest.request<null, Profile.Response>(request);\n  }\n\n  update(body: Profile.Response): Observable<Profile.Response> {\n    const request: Rest.Request<Profile.Response> = {\n      method: 'PUT',\n      url: '/api/identity/profile',\n      body,\n    };\n\n    return this.rest.request<Profile.Response, Profile.Response>(request);\n  }\n\n  changePassword(body: Profile.ChangePasswordRequest): Observable<null> {\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\n      method: 'POST',\n      url: '/api/identity/profile/changePassword',\n      body,\n    };\n\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request);\n  }\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { ProfileGet, ProfileChangePassword, ProfileUpdate } from '../actions/profile.actions';\nimport { Profile } from '../models/profile';\nimport { ProfileService } from '../services/profile.service';\nimport { tap } from 'rxjs/operators';\n\n@State<Profile.State>({\n  name: 'ProfileState',\n  defaults: {} as Profile.State,\n})\nexport class ProfileState {\n  @Selector()\n  static getProfile({ profile }: Profile.State): Profile.Response {\n    return profile;\n  }\n\n  constructor(private profileService: ProfileService) {}\n\n  @Action(ProfileGet)\n  profileGet({ patchState }: StateContext<Profile.State>) {\n    return this.profileService.get().pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(ProfileUpdate)\n  profileUpdate({ patchState }: StateContext<Profile.State>, { payload }: ProfileUpdate) {\n    return this.profileService.update(payload).pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(ProfileChangePassword)\n  changePassword(_, { payload }: ProfileChangePassword) {\n    return this.profileService.changePassword(payload);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApplicationConfiguration, Rest } from '../models';\nimport { RestService } from './rest.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigurationService {\n  constructor(private rest: RestService) {}\n\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/abp/application-configuration',\n    };\n\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\n  }\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { SessionSetLanguage } from '../actions/session.actions';\nimport { Session } from '../models/session';\n\n@State<Session.State>({\n  name: 'SessionState',\n  defaults: {} as Session.State,\n})\nexport class SessionState {\n  @Selector()\n  static getLanguage({ language }: Session.State): string {\n    return language;\n  }\n\n  constructor() {}\n\n  @Action(SessionSetLanguage)\n  sessionSetLanguage({ patchState }: StateContext<Session.State>, { payload }: SessionSetLanguage) {\n    patchState({\n      language: payload,\n    });\n  }\n}\n","import { ABP } from '../models';\n\nexport function organizeRoutes(\n  routes: ABP.FullRoute[],\n  wrappers: ABP.FullRoute[] = [],\n  parentNameArr = [] as ABP.FullRoute[],\n  parentName: string = null,\n): ABP.FullRoute[] {\n  const filter = route => {\n    if (route.children) {\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\n    }\n\n    if (route.parentName && route.parentName !== parentName) {\n      parentNameArr.push(route);\n      return false;\n    }\n\n    return true;\n  };\n\n  if (parentName) {\n    // recursive block\n    return routes.filter(filter);\n  }\n\n  const filteredRoutes = routes.filter(filter);\n\n  if (parentNameArr.length) {\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\n  }\n\n  return filteredRoutes;\n}\n\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\n  return routes\n    .map(route => {\n      if (route.children && route.children.length) {\n        route.children = setChildRoute(route.children, parentNameArr);\n      }\n\n      const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\n      if (foundedChildren && foundedChildren.length) {\n        route.children = [...(route.children || []), ...foundedChildren];\n      }\n\n      return route;\n    })\n    .filter(route => route.path || (route.children && route.children.length));\n}\n\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\n  if (!routes.length) return [];\n  return routes\n    .sort((a, b) => a.order - b.order)\n    .map(route => {\n      if (route.children && route.children.length) {\n        route.children = sortRoutes(route.children);\n      }\n\n      return route;\n    });\n}\n","import { State, Selector, createSelector, Action, StateContext, Store } from '@ngxs/store';\nimport { Config, ABP } from '../models';\nimport { ConfigGetAppConfiguration, PatchRouteByName } from '../actions/config.actions';\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\nimport { tap, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { SessionSetLanguage } from '../actions';\nimport { SessionState } from './session.state';\nimport { of } from 'rxjs';\nimport { setChildRoute, sortRoutes, organizeRoutes } from '../utils/route-utils';\n\n@State<Config.State>({\n  name: 'ConfigState',\n  defaults: {} as Config.State,\n})\nexport class ConfigState {\n  @Selector()\n  static getAll(state: Config.State) {\n    return state;\n  }\n\n  static getOne(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return state[key];\n      },\n    );\n\n    return selector;\n  }\n\n  static getDeep(keys: string[] | string) {\n    if (typeof keys === 'string') {\n      keys = keys.split('.');\n    }\n\n    if (!Array.isArray(keys)) {\n      throw new Error('The argument must be a dot string or an string array.');\n    }\n\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return (keys as string[]).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state);\n      },\n    );\n\n    return selector;\n  }\n\n  static getApiUrl(key?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): string {\n        return state.environment.apis[key || 'default'].url;\n      },\n    );\n\n    return selector;\n  }\n\n  static getSetting(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return snq(() => state.setting.values[key]);\n      },\n    );\n\n    return selector;\n  }\n\n  static getGrantedPolicy(condition: string = '') {\n    const keys = condition\n      .replace(/\\(|\\)|\\!|\\s/g, '')\n      .split(/\\|\\||&&/)\n      .filter(key => key);\n\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): boolean {\n        if (!keys.length) return true;\n\n        const getPolicy = key => snq(() => state.auth.grantedPolicies[key], false);\n        if (keys.length > 1) {\n          keys.forEach(key => {\n            const value = getPolicy(key);\n            condition = condition.replace(key, value);\n          });\n\n          // tslint:disable-next-line: no-eval\n          return eval(`!!${condition}`);\n        }\n\n        return getPolicy(condition);\n      },\n    );\n\n    return selector;\n  }\n\n  static getCopy(key: string, ...interpolateParams: string[]) {\n    const keys = key.split('::') as string[];\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        const { defaultResourceName } = state.environment.localization;\n        if (keys[0] === '') {\n          if (!defaultResourceName) {\n            throw new Error(\n              `Please check your environment. May you forget set defaultResourceName? \n              Here is the example:\n               { production: false,\n                 localization: {\n                   defaultResourceName: 'MyProjectName'\n                  }\n               }`,\n            );\n          }\n\n          keys[0] = snq(() => defaultResourceName);\n        }\n\n        let copy = keys.reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state.localization.values);\n\n        if (copy && interpolateParams && interpolateParams.length) {\n          interpolateParams.forEach((param, index) => {\n            copy = copy.replace(`'{${index}}'`, param);\n          });\n        }\n\n        return copy || key;\n      },\n    );\n\n    return selector;\n  }\n\n  constructor(private appConfigurationService: ApplicationConfigurationService, private store: Store) {}\n\n  @Action(ConfigGetAppConfiguration)\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\n    return this.appConfigurationService.getConfiguration().pipe(\n      tap(configuration =>\n        patchState({\n          ...configuration,\n        }),\n      ),\n      switchMap(configuration =>\n        this.store.selectSnapshot(SessionState.getLanguage)\n          ? of(null)\n          : dispatch(\n              new SessionSetLanguage(snq(() => configuration.setting.values['Abp.Localization.DefaultLanguage'])),\n            ),\n      ),\n    );\n  }\n\n  @Action(PatchRouteByName)\n  patchRoute({ patchState, getState }: StateContext<Config.State>, { name, newValue }: PatchRouteByName) {\n    let routes: ABP.FullRoute[] = getState().routes;\n\n    const index = routes.findIndex(route => route.name === name);\n\n    routes = patchRouteDeep(routes, name, newValue);\n\n    return patchState({\n      routes,\n    });\n  }\n}\n\nfunction patchRouteDeep(\n  routes: ABP.FullRoute[],\n  name: string,\n  newValue: Partial<ABP.FullRoute>,\n  parentUrl: string = null,\n): ABP.FullRoute[] {\n  routes = routes.map(route => {\n    if (route.name === name) {\n      if (newValue.path) {\n        newValue.url = `${parentUrl}/${newValue.path}`;\n      }\n\n      if (newValue.children && newValue.children.length) {\n        newValue.children = newValue.children.map(child => ({\n          ...child,\n          url: `${parentUrl}/${route.path}/${child.path}`,\n        }));\n      }\n\n      return { ...route, ...newValue };\n    } else if (route.children && route.children.length) {\n      route.children = patchRouteDeep(route.children, name, newValue, (parentUrl || '/') + route.path);\n    }\n\n    return route;\n  });\n\n  if (parentUrl) {\n    // recursive block\n    return routes;\n  }\n\n  return organizeRoutes(routes);\n}\n","export function uuid(a?: any): string {\n  return a\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n","import { Injector } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigGetAppConfiguration } from '../actions/config.actions';\n\nexport function getInitialData(injector: Injector) {\n  const fn = function() {\n    const store: Store = injector.get(Store);\n\n    return store.dispatch(new ConfigGetAppConfiguration()).toPromise();\n  };\n\n  return fn;\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\n  source: Observable<T>,\n) => {\n  const originalDestroy = componentInstance[destroyMethodName];\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`,\n    );\n  }\n  if (!componentInstance['__takeUntilDestroy']) {\n    componentInstance['__takeUntilDestroy'] = new Subject();\n\n    componentInstance[destroyMethodName] = function() {\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n      componentInstance['__takeUntilDestroy'].next(true);\n      componentInstance['__takeUntilDestroy'].complete();\n    };\n  }\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n","import { Component, OnDestroy, Type } from '@angular/core';\nimport { NavigationEnd, Router, UrlSegment } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { eLayoutType } from '../enums';\nimport { ABP, Config } from '../models';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\nimport snq from 'snq';\n\n@Component({\n  selector: 'abp-dynamic-layout',\n  template: `\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\n\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\n  `,\n})\nexport class DynamicLayoutComponent implements OnDestroy {\n  @Select(ConfigState.getOne('requirements'))\n  requirements$: Observable<Config.Requirements>;\n\n  layout: Type<any>;\n\n  constructor(private router: Router, private store: Store) {\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\n        const {\n          requirements: { layouts },\n          routes,\n        } = this.store.selectSnapshot(ConfigState.getAll);\n\n        const layout = findLayout(segments, routes);\n\n        this.layout = layouts.filter(l => !!l).find(l => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\n  let layout = eLayoutType.empty;\n\n  const route = routes\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\n    .find(r => r.path === segments[0].path);\n\n  if (route) {\n    if (route.layout) {\n      layout = route.layout;\n    }\n\n    if (route.children && route.children.length) {\n      const child = route.children.find(c => c.path === segments[1].path);\n\n      if (child.layout) {\n        layout = child.layout;\n      }\n    }\n  }\n\n  return layout;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-router-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class RouterOutletComponent {}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\n\n@Directive({\n  selector: '[abpPermission]',\n})\nexport class PermissionDirective implements OnInit, OnDestroy {\n  @Input('abpPermission') condition: string;\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2, private store: Store) {}\n\n  ngOnInit() {\n    if (this.condition) {\n      this.store\n        .select(ConfigState.getGrantedPolicy(this.condition))\n        .pipe(takeUntilDestroy(this))\n        .subscribe(isGranted => {\n          if (!isGranted) {\n            this.renderer.removeChild(\n              (this.elRef.nativeElement as HTMLElement).parentElement,\n              this.elRef.nativeElement,\n            );\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport snq from 'snq';\n\n@Directive({\n  selector: '[abpVisibility]',\n})\nexport class VisibilityDirective implements AfterViewInit {\n  @Input('abpVisibility')\n  focusedElement: HTMLElement;\n\n  completed$ = new Subject<boolean>();\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (!mutation.target) return;\n\n        const htmlNodes = snq(\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\n          [],\n        );\n\n        if (!htmlNodes.length) {\n          this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\n          this.disconnect();\n        } else {\n          setTimeout(() => {\n            this.disconnect();\n          }, 0);\n        }\n      });\n    });\n\n    observer.observe(this.focusedElement, {\n      childList: true,\n    });\n\n    this.completed$.subscribe(() => observer.disconnect());\n  }\n\n  disconnect() {\n    this.completed$.next();\n    this.completed$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\nimport { Navigate } from '@ngxs/router-plugin';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private oauthService: OAuthService, private store: Store) {}\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      return hasValidAccessToken;\n    }\n\n    this.store.dispatch(new Navigate(['/account/login'], null, { state: { redirectUrl: state.url } }));\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate({ data }: ActivatedRouteSnapshot): Observable<boolean> {\n    const resource = data.requiredPolicy as string;\n    return this.store.select(ConfigState.getGrantedPolicy(resource));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\nimport { SessionState } from '../states';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  constructor(private oAuthService: OAuthService, private store: Store) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    const headers = {} as any;\n    const token = this.oAuthService.getAccessToken();\n    if (!request.headers.has('Authorization') && token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\n    if (!request.headers.has('Accept-Language') && lang) {\n      headers['Accept-Language'] = lang;\n    }\n\n    return next.handle(\n      request.clone({\n        setHeaders: headers,\n      }),\n    );\n  }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport namespace Rest {\n  export interface Config {\n    throwErr?: boolean;\n    observe?: Observe;\n  }\n\n  export const enum Observe {\n    Body = 'body',\n    Events = 'events',\n    Response = 'response',\n  }\n\n  export const enum ResponseType {\n    ArrayBuffer = 'arraybuffer',\n    Blob = 'blob',\n    JSON = 'json',\n    Text = 'text',\n  }\n\n  export interface Request<T> {\n    body?: T;\n    headers?:\n      | HttpHeaders\n      | {\n          [header: string]: string | string[];\n        };\n    method: string;\n    params?:\n      | HttpParams\n      | {\n          [param: string]: any;\n        };\n    reportProgress?: boolean;\n    responseType?: ResponseType;\n    url: string;\n    withCredentials?: boolean;\n  }\n}\n","import { Injectable, Inject, InjectionToken, Type } from '@angular/core';\nimport { NgxsPlugin, setValue, actionMatcher, InitState, UpdateState, NgxsNextPluginFn } from '@ngxs/store';\nimport { Router, Routes } from '@angular/router';\nimport { ABP } from '../models';\nimport snq from 'snq';\nimport { setChildRoute, sortRoutes, organizeRoutes } from '../utils/route-utils';\n\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\n\n@Injectable()\nexport class ConfigPlugin implements NgxsPlugin {\n  private initialized: boolean = false;\n\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root, private router: Router) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    const matches = actionMatcher(event);\n    const isInitAction = matches(InitState) || matches(UpdateState);\n\n    // const layouts = snq(() => this.options.requirements.layouts.filter(layout => layout instanceof Type), []);\n    if (isInitAction && !this.initialized) {\n      let { routes, wrappers } = transformRoutes(this.router.config);\n      routes = organizeRoutes(routes, wrappers);\n\n      state = setValue(state, 'ConfigState', {\n        ...(state.ConfigState && { ...state.ConfigState }),\n        ...this.options,\n        routes,\n      });\n\n      this.initialized = true;\n    }\n\n    return next(state, event);\n  }\n}\n\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\n  const abpRoutes: ABP.FullRoute[] = routes\n    .filter(route => {\n      return snq(() => route.data.routes.find(r => r.path === route.path), false);\n    })\n    .reduce((acc, val) => [...acc, ...val.data.routes], []);\n\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\n  const transformed = [] as ABP.FullRoute[];\n  routes\n    .filter(route => route.component || route.loadChildren)\n    .forEach(route => {\n      const abpPackage = abpRoutes.find(abp => abp.path.toLowerCase() === route.path.toLowerCase());\n      const { length } = transformed;\n\n      if (abpPackage) {\n        transformed.push(abpPackage);\n      }\n\n      if (transformed.length === length) {\n        transformed.push({\n          path: route.path,\n          name: snq(() => route.data.routes.name, route.path),\n          children: route.data.routes.children || [],\n        } as ABP.FullRoute);\n      }\n    });\n\n  return { routes: setUrls(transformed), wrappers };\n}\n\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\n  if (parentUrl) {\n    // this if block using for only recursive call\n\n    return routes.map(route => ({\n      ...route,\n      url: `${parentUrl}/${route.path}`,\n      ...(route.children &&\n        route.children.length && {\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\n        }),\n    }));\n  }\n\n  return routes.map(route => ({\n    ...route,\n    url: `/${route.path}`,\n    ...(route.children &&\n      route.children.length && {\n        children: setUrls(route.children, `/${route.path}`),\n      }),\n  }));\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  constructor(private store: Store) {}\n\n  getAll() {\n    return this.store.selectSnapshot(ConfigState.getAll);\n  }\n\n  getOne(key: string) {\n    return this.store.selectSnapshot(ConfigState.getOne(key));\n  }\n\n  getDeep(keys: string[] | string) {\n    return this.store.selectSnapshot(ConfigState.getDeep(keys));\n  }\n\n  getSetting(key: string) {\n    return this.store.selectSnapshot(ConfigState.getSetting(key));\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { uuid } from '../utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyLoadService {\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\n\n  load(\n    url: string,\n    type: 'script' | 'style',\n    content: string = '',\n    targetQuery: string = 'body',\n    position: InsertPosition = 'afterend',\n  ): Observable<void> {\n    if (!url && !content) return;\n    const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\n\n    if (this.loadedLibraries[key]) {\n      return this.loadedLibraries[key].asObservable();\n    }\n\n    this.loadedLibraries[key] = new ReplaySubject();\n\n    let library;\n    if (type === 'script') {\n      library = document.createElement('script');\n      library.type = 'text/javascript';\n      if (url) {\n        (library as HTMLScriptElement).src = url;\n      }\n\n      (library as HTMLScriptElement).text = content;\n    } else if (url) {\n      library = document.createElement('link');\n      library.type = 'text/css';\n      (library as HTMLLinkElement).rel = 'stylesheet';\n\n      if (url) {\n        (library as HTMLLinkElement).href = url;\n      }\n    } else {\n      library = document.createElement('style');\n      (library as HTMLStyleElement).textContent = content;\n    }\n\n    library.onload = () => {\n      this.loadedLibraries[key].next();\n      this.loadedLibraries[key].complete();\n    };\n\n    document.querySelector(targetQuery).insertAdjacentElement(position, library);\n\n    return this.loadedLibraries[key].asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class LocalizationService {\n  constructor(private store: Store) {}\n\n  get(keys: string, ...interpolateParams: string[]): Observable<string> {\n    return this.store.select(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n\n  instant(keys: string, ...interpolateParams: string[]): string {\n    return this.store.selectSnapshot(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Config } from '../models';\n\nexport function environmentFactory(environment: Config.Environment) {\n  return {\n    ...environment,\n  };\n}\n\nexport function configFactory(config: Config.Requirements) {\n  return {\n    ...config,\n  };\n}\n\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\n\nexport const CONFIG = new InjectionToken('CONFIG');\n","import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Pipe({\n  name: 'abpLocalization',\n  pure: false, // required to update the value\n})\nexport class LocalizationPipe implements PipeTransform, OnDestroy {\n  initialized: boolean = false;\n\n  value: string;\n\n  constructor(private store: Store) {}\n\n  transform(value: string, ...interpolateParams: string[]): string {\n    if (!this.initialized) {\n      this.initialized = true;\n\n      this.store\n        .select(\n          ConfigState.getCopy(\n            value,\n            ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\n          ),\n        )\n        .pipe(\n          takeUntilDestroy(this),\n          distinctUntilChanged(),\n        )\n        .subscribe(copy => (this.value = copy));\n    }\n\n    return this.value;\n  }\n\n  ngOnDestroy() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\nimport { RouterOutletComponent } from './components/router-outlet.component';\nimport { PermissionDirective } from './directives/permission.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { ApiInterceptor } from './interceptors/api.interceptor';\nimport { ABP } from './models/common';\nimport { LocalizationPipe } from './pipes/localization.pipe';\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\nimport { ConfigState } from './states/config.state';\nimport { ProfileState } from './states/profile.state';\nimport { SessionState } from './states/session.state';\nimport { getInitialData } from './utils/initial-utils';\n\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([ProfileState, SessionState, ConfigState]),\n    NgxsStoragePluginModule.forRoot({ key: 'SessionState' }),\n    NgxsRouterPluginModule.forRoot(),\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    PermissionDirective,\n    VisibilityDirective,\n    LocalizationPipe,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    PermissionDirective,\n    VisibilityDirective,\n    LocalizationPipe,\n  ],\n  providers: [LocalizationPipe],\n  entryComponents: [RouterOutletComponent, DynamicLayoutComponent],\n})\nexport class CoreModule {\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: ConfigPlugin,\n          multi: true,\n        },\n        {\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ApiInterceptor,\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: getInitialData,\n        },\n      ],\n    };\n  }\n}\n"]}