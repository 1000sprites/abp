{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/config.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/core.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","ar","next","done","push","value","error","__spread","concat","PatchRouteByName","name","newValue","type","GetAppConfiguration","StartLoader","payload","StopLoader","GetProfile","UpdateProfile","ChangePassword","RestOccurError","SetLanguage","SetTenant","RestService","http","store","handleError","err","dispatch","console","NEVER","request","config","api","_this","_a","observe","throwErr","url","selectSnapshot","ConfigState","getApiUrl","method","options","pipe","take","catchError","throwError","Injectable","args","providedIn","HttpClient","Store","ProfileService","rest","get","update","body","changePassword","ProfileState","profileService","getProfile","profile","profileGet","patchState","tap","profileUpdate","_b","_","tslib_1.__decorate","Action","Selector","State","defaults","ApplicationConfigurationService","getConfiguration","SessionState","getLanguage","language","getTenant","tenant","setLanguage","setTenantId","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","sort","a","b","order","appConfigurationService","getAll","state","getApplicationInfo","environment","application","getOne","createSelector","ConfigState_1","getDeep","keys","split","Array","isArray","Error","reduce","acc","val","apis","getSetting","snq","setting","values","getGrantedPolicy","condition","replace","selector","getPolicy","auth","grantedPolicies","forEach","eval","getCopy","interpolateParams","_i","localization","defaultResourceName","copy","params","param","addData","configuration","switchMap","of","patchRoute","getState","findIndex","patchRouteDeep","parentUrl","path","child","uuid","Math","random","toString","getInitialData","injector","toPromise","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","router","events","subscribe","event","NavigationEnd","segments","parseUrl","root","primary","layouts","requirements","layout_1","findLayout","layout","l","find","toLowerCase","ngOnDestroy","Component","template","Router","Select","Observable","wrapper","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","setTimeout","nativeElement","focus","Directive","ElementRef","Input","EllipsisDirective","cdRef","enabled","witdh","undefined","ngAfterContentInit","title","innerText","detectChanges","ChangeDetectorRef","HostBinding","PermissionDirective","renderer","ngOnInit","select","isGranted","removeChild","parentElement","Optional","Renderer2","VisibilityDirective","completed$","observer","MutationObserver","mutations","mutation","from","childNodes","node","HTMLElement","disconnect","focusedElement","childList","AuthGuard","oauthService","canActivate","hasValidAccessToken","Navigate","redirectUrl","OAuthService","PermissionGuard","resource","data","ApiInterceptor","oAuthService","intercept","headers","token","getAccessToken","has","lang","id","handle","clone","setHeaders","finalize","Rest","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","initialized","matches","actionMatcher","InitState","UpdateState","transformRoutes","setValue","Inject","abpRoutes","transformed","component","loadChildren","abpPackage","abp","setUrls","ConfigService","LazyLoadService","loadedLibraries","load","content","targetQuery","position","library","slice","lastIndexOf","asObservable","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","LocalizationService","instant","environmentFactory","configFactory","ENVIRONMENT","CONFIG","LocalizationPipe","transform","distinctUntilChanged","Pipe","pure","InputEventDebounceDirective","el","debounce","debounceEvent","EventEmitter","fromEvent","debounceTime","emit","Output","ClickEventStopPropagationDirective","stopPropEvent","stopPropagation","CoreModule","forRoot","ngModule","providers","provide","NGXS_PLUGINS","useClass","multi","useValue","HTTP_INTERCEPTORS","APP_INITIALIZER","deps","Injector","useFactory","NgModule","imports","NgxsModule","forFeature","NgxsStoragePluginModule","NgxsRouterPluginModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ABP } from '../models';\n\nexport class PatchRouteByName {\n  static readonly type = '[Config] Patch Route By Name';\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\n}\n\nexport class GetAppConfiguration {\n  static readonly type = '[Config] Get App Configuration';\n}\n","import { HttpRequest } from '@angular/common/http';\n\nexport class StartLoader {\n  static readonly type = '[Loader] Start';\n  constructor(public payload: HttpRequest<any>) {}\n}\n\nexport class StopLoader {\n  static readonly type = '[Loader] Stop';\n  constructor(public payload: HttpRequest<any>) {}\n}\n","import { Profile } from '../models';\n\nexport class GetProfile {\n  static readonly type = '[Profile] Get';\n}\n\nexport class UpdateProfile {\n  static readonly type = '[Profile] Update';\n  constructor(public payload: Profile.Response) {}\n}\n\nexport class ChangePassword {\n  static readonly type = '[Profile] Change Password';\n  constructor(public payload: Profile.ChangePasswordRequest) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport class RestOccurError {\n  static readonly type = '[Rest] Error';\n  constructor(public payload: HttpErrorResponse | any) {}\n}\n","import { ABP } from '../models';\n\nexport class SetLanguage {\n  static readonly type = '[Session] Set Language';\n  constructor(public payload: string) {}\n}\nexport class SetTenant {\n  static readonly type = '[Session] Set Tenant';\n  constructor(public payload: ABP.BasicItem) {}\n}\n","import { HttpClient, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { NEVER, Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { Rest } from '../models/rest';\nimport { ConfigState } from '../states';\nimport { RestOccurError } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestService {\n  constructor(private http: HttpClient, private store: Store) {}\n\n  handleError(err: any): Observable<any> {\n    this.store.dispatch(new RestOccurError(err));\n    console.error(err);\n    return NEVER;\n  }\n\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config: Rest.Config = {}, api?: string): Observable<R> {\n    const { observe = Rest.Observe.Body, throwErr } = config;\n    const url = api || this.store.selectSnapshot(ConfigState.getApiUrl()) + request.url;\n    const { method, ...options } = request;\n    return this.http.request<T>(method, url, { observe, ...options } as any).pipe(\n      observe === Rest.Observe.Body ? take(1) : null,\n      catchError(err => {\n        if (throwErr) {\n          return throwError(err);\n        }\n\n        return this.handleError(err);\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService } from './rest.service';\nimport { Profile, Rest } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<Profile.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/my-profile',\n    };\n\n    return this.rest.request<null, Profile.Response>(request);\n  }\n\n  update(body: Profile.Response): Observable<Profile.Response> {\n    const request: Rest.Request<Profile.Response> = {\n      method: 'PUT',\n      url: '/api/identity/my-profile',\n      body,\n    };\n\n    return this.rest.request<Profile.Response, Profile.Response>(request);\n  }\n\n  changePassword(body: Profile.ChangePasswordRequest, throwErr: boolean = false): Observable<null> {\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\n      method: 'POST',\n      url: '/api/identity/my-profile/change-password',\n      body,\n    };\n\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { throwErr });\n  }\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { GetProfile, ChangePassword, UpdateProfile } from '../actions/profile.actions';\nimport { Profile } from '../models/profile';\nimport { ProfileService } from '../services/profile.service';\nimport { tap } from 'rxjs/operators';\n\n@State<Profile.State>({\n  name: 'ProfileState',\n  defaults: {} as Profile.State,\n})\nexport class ProfileState {\n  @Selector()\n  static getProfile({ profile }: Profile.State): Profile.Response {\n    return profile;\n  }\n\n  constructor(private profileService: ProfileService) {}\n\n  @Action(GetProfile)\n  profileGet({ patchState }: StateContext<Profile.State>) {\n    return this.profileService.get().pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(UpdateProfile)\n  profileUpdate({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\n    return this.profileService.update(payload).pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(ChangePassword)\n  changePassword(_, { payload }: ChangePassword) {\n    return this.profileService.changePassword(payload, true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApplicationConfiguration, Rest } from '../models';\nimport { RestService } from './rest.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigurationService {\n  constructor(private rest: RestService) {}\n\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/abp/application-configuration',\n    };\n\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { SetLanguage, SetTenant } from '../actions/session.actions';\nimport { ABP, Session } from '../models';\n\n@State<Session.State>({\n  name: 'SessionState',\n  defaults: {} as Session.State,\n})\nexport class SessionState {\n  @Selector()\n  static getLanguage({ language }: Session.State): string {\n    return language;\n  }\n\n  @Selector()\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\n    return tenant;\n  }\n\n  constructor() {}\n\n  @Action(SetLanguage)\n  setLanguage({ patchState }: StateContext<Session.State>, { payload }: SetLanguage) {\n    patchState({\n      language: payload,\n    });\n  }\n\n  @Action(SetTenant)\n  setTenantId({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\n    patchState({\n      tenant: payload,\n    });\n  }\n}\n","import { ABP } from '../models';\n\nexport function organizeRoutes(\n  routes: ABP.FullRoute[],\n  wrappers: ABP.FullRoute[] = [],\n  parentNameArr = [] as ABP.FullRoute[],\n  parentName: string = null,\n): ABP.FullRoute[] {\n  const filter = route => {\n    if (route.children && route.children.length) {\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\n    }\n\n    if (route.parentName && route.parentName !== parentName) {\n      parentNameArr.push(route);\n      return false;\n    }\n\n    return true;\n  };\n\n  if (parentName) {\n    // recursive block\n    return routes.filter(filter);\n  }\n\n  const filteredRoutes = routes.filter(filter);\n\n  if (parentNameArr.length) {\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\n  }\n\n  return filteredRoutes;\n}\n\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\n  return routes.map(route => {\n    if (route.children && route.children.length) {\n      route.children = setChildRoute(route.children, parentNameArr);\n    }\n\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\n    if (foundedChildren && foundedChildren.length) {\n      route.children = [...(route.children || []), ...foundedChildren];\n    }\n\n    return route;\n  });\n}\n\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\n  if (!routes.length) return [];\n  return routes\n    .sort((a, b) => a.order - b.order)\n    .map(route => {\n      if (route.children && route.children.length) {\n        route.children = sortRoutes(route.children);\n      }\n\n      return route;\n    });\n}\n","import { State, Selector, createSelector, Action, StateContext, Store } from '@ngxs/store';\nimport { Config, ABP } from '../models';\nimport { GetAppConfiguration, PatchRouteByName } from '../actions/config.actions';\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\nimport { tap, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { SetLanguage } from '../actions';\nimport { SessionState } from './session.state';\nimport { of } from 'rxjs';\nimport { setChildRoute, sortRoutes, organizeRoutes } from '../utils/route-utils';\n\n@State<Config.State>({\n  name: 'ConfigState',\n  defaults: {} as Config.State,\n})\nexport class ConfigState {\n  @Selector()\n  static getAll(state: Config.State) {\n    return state;\n  }\n\n  @Selector()\n  static getApplicationInfo(state: Config.State) {\n    return state.environment.application || {};\n  }\n\n  static getOne(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return state[key];\n      },\n    );\n\n    return selector;\n  }\n\n  static getDeep(keys: string[] | string) {\n    if (typeof keys === 'string') {\n      keys = keys.split('.');\n    }\n\n    if (!Array.isArray(keys)) {\n      throw new Error('The argument must be a dot string or an string array.');\n    }\n\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return (keys as string[]).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state);\n      },\n    );\n\n    return selector;\n  }\n\n  static getApiUrl(key?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): string {\n        return state.environment.apis[key || 'default'].url;\n      },\n    );\n\n    return selector;\n  }\n\n  static getSetting(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return snq(() => state.setting.values[key]);\n      },\n    );\n\n    return selector;\n  }\n\n  static getGrantedPolicy(condition: string = '') {\n    const keys = condition\n      .replace(/\\(|\\)|\\!|\\s/g, '')\n      .split(/\\|\\||&&/)\n      .filter(key => key);\n\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): boolean {\n        if (!keys.length) return true;\n\n        const getPolicy = key => snq(() => state.auth.grantedPolicies[key], false);\n        if (keys.length > 1) {\n          keys.forEach(key => {\n            const value = getPolicy(key);\n            condition = condition.replace(key, value);\n          });\n\n          // tslint:disable-next-line: no-eval\n          return eval(`!!${condition}`);\n        }\n\n        return getPolicy(condition);\n      },\n    );\n\n    return selector;\n  }\n\n  static getCopy(key: string, ...interpolateParams: string[]) {\n    if (!key) key = '';\n\n    const keys = key.split('::') as string[];\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        if (!state.localization) return key;\n\n        const { defaultResourceName } = state.environment.localization;\n        if (keys[0] === '') {\n          if (!defaultResourceName) {\n            throw new Error(\n              `Please check your environment. May you forget set defaultResourceName? \n              Here is the example:\n               { production: false,\n                 localization: {\n                   defaultResourceName: 'MyProjectName'\n                  }\n               }`,\n            );\n          }\n\n          keys[0] = snq(() => defaultResourceName);\n        }\n\n        let copy = keys.reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state.localization.values);\n\n        interpolateParams = interpolateParams.filter(params => params != null);\n        if (copy && interpolateParams && interpolateParams.length) {\n          interpolateParams.forEach(param => {\n            copy = copy.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\n          });\n        }\n\n        return copy || key;\n      },\n    );\n\n    return selector;\n  }\n\n  constructor(private appConfigurationService: ApplicationConfigurationService, private store: Store) {}\n\n  @Action(GetAppConfiguration)\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\n    return this.appConfigurationService.getConfiguration().pipe(\n      tap(configuration =>\n        patchState({\n          ...configuration,\n        }),\n      ),\n      switchMap(configuration =>\n        this.store.selectSnapshot(SessionState.getLanguage)\n          ? of(null)\n          : dispatch(new SetLanguage(snq(() => configuration.setting.values['Abp.Localization.DefaultLanguage']))),\n      ),\n    );\n  }\n\n  @Action(PatchRouteByName)\n  patchRoute({ patchState, getState }: StateContext<Config.State>, { name, newValue }: PatchRouteByName) {\n    let routes: ABP.FullRoute[] = getState().routes;\n\n    const index = routes.findIndex(route => route.name === name);\n\n    routes = patchRouteDeep(routes, name, newValue);\n\n    return patchState({\n      routes,\n    });\n  }\n}\n\nfunction patchRouteDeep(\n  routes: ABP.FullRoute[],\n  name: string,\n  newValue: Partial<ABP.FullRoute>,\n  parentUrl: string = null,\n): ABP.FullRoute[] {\n  routes = routes.map(route => {\n    if (route.name === name) {\n      if (newValue.path) {\n        newValue.url = `${parentUrl}/${newValue.path}`;\n      }\n\n      if (newValue.children && newValue.children.length) {\n        newValue.children = newValue.children.map(child => ({\n          ...child,\n          url: `${parentUrl}/${route.path}/${child.path}`,\n        }));\n      }\n\n      return { ...route, ...newValue };\n    } else if (route.children && route.children.length) {\n      route.children = patchRouteDeep(route.children, name, newValue, (parentUrl || '/') + route.path);\n    }\n\n    return route;\n  });\n\n  if (parentUrl) {\n    // recursive block\n    return routes;\n  }\n\n  return organizeRoutes(routes);\n}\n","export function uuid(a?: any): string {\n  return a\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n","import { Injector } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GetAppConfiguration } from '../actions/config.actions';\n\nexport function getInitialData(injector: Injector) {\n  const fn = function() {\n    const store: Store = injector.get(Store);\n\n    return store.dispatch(new GetAppConfiguration()).toPromise();\n  };\n\n  return fn;\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\n  source: Observable<T>,\n) => {\n  const originalDestroy = componentInstance[destroyMethodName];\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`,\n    );\n  }\n  if (!componentInstance['__takeUntilDestroy']) {\n    componentInstance['__takeUntilDestroy'] = new Subject();\n\n    componentInstance[destroyMethodName] = function() {\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n      componentInstance['__takeUntilDestroy'].next(true);\n      componentInstance['__takeUntilDestroy'].complete();\n    };\n  }\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n","import { Component, OnDestroy, Type } from '@angular/core';\nimport { NavigationEnd, Router, UrlSegment } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { eLayoutType } from '../enums';\nimport { ABP, Config } from '../models';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\nimport snq from 'snq';\n\n@Component({\n  selector: 'abp-dynamic-layout',\n  template: `\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\n\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\n  `,\n})\nexport class DynamicLayoutComponent implements OnDestroy {\n  @Select(ConfigState.getOne('requirements'))\n  requirements$: Observable<Config.Requirements>;\n\n  layout: Type<any>;\n\n  constructor(private router: Router, private store: Store) {\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\n        const {\n          requirements: { layouts },\n          routes,\n        } = this.store.selectSnapshot(ConfigState.getAll);\n\n        const layout = findLayout(segments, routes);\n\n        this.layout = layouts.filter(l => !!l).find(l => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\n  let layout = eLayoutType.empty;\n\n  const route = routes\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\n    .find(r => r.path === segments[0].path);\n\n  if (route) {\n    if (route.layout) {\n      layout = route.layout;\n    }\n\n    if (route.children && route.children.length && segments.length > 1) {\n      const child = route.children.find(c => c.path === segments[1].path);\n\n      if (child.layout) {\n        layout = child.layout;\n      }\n    }\n  }\n\n  return layout;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-router-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class RouterOutletComponent {}\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[autofocus]',\n})\nexport class AutofocusDirective implements AfterViewInit {\n  @Input('autofocus')\n  delay: number = 0;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\n  }\n}\n","import { AfterContentInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[abpEllipsis]',\n})\nexport class EllipsisDirective implements AfterContentInit {\n  @Input('abpEllipsis')\n  witdh: string;\n\n  @HostBinding('title')\n  @Input()\n  title: string;\n\n  @Input('abpEllipsisEnabled')\n  enabled = true;\n\n  @HostBinding('class.abp-ellipsis')\n  get class() {\n    return this.enabled;\n  }\n\n  @HostBinding('style.max-width')\n  get maxWidth() {\n    return this.enabled ? this.witdh || '160px' : undefined;\n  }\n\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      const title = this.title;\n      this.title = title || (this.elRef.nativeElement as HTMLElement).innerText;\n\n      if (this.title !== title) {\n        this.cdRef.detectChanges();\n      }\n    }, 0);\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\n\n@Directive({\n  selector: '[abpPermission]',\n})\nexport class PermissionDirective implements OnInit, OnDestroy {\n  @Input('abpPermission') condition: string;\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2, private store: Store) {}\n\n  ngOnInit() {\n    if (this.condition) {\n      this.store\n        .select(ConfigState.getGrantedPolicy(this.condition))\n        .pipe(takeUntilDestroy(this))\n        .subscribe(isGranted => {\n          if (!isGranted) {\n            this.renderer.removeChild(\n              (this.elRef.nativeElement as HTMLElement).parentElement,\n              this.elRef.nativeElement,\n            );\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport snq from 'snq';\n\n@Directive({\n  selector: '[abpVisibility]',\n})\nexport class VisibilityDirective implements AfterViewInit {\n  @Input('abpVisibility')\n  focusedElement: HTMLElement;\n\n  completed$ = new Subject<boolean>();\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (!mutation.target) return;\n\n        const htmlNodes = snq(\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\n          [],\n        );\n\n        if (!htmlNodes.length) {\n          this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\n          this.disconnect();\n        } else {\n          setTimeout(() => {\n            this.disconnect();\n          }, 0);\n        }\n      });\n    });\n\n    observer.observe(this.focusedElement, {\n      childList: true,\n    });\n\n    this.completed$.subscribe(() => observer.disconnect());\n  }\n\n  disconnect() {\n    this.completed$.next();\n    this.completed$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\nimport { Navigate } from '@ngxs/router-plugin';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private oauthService: OAuthService, private store: Store) {}\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      return hasValidAccessToken;\n    }\n\n    this.store.dispatch(new Navigate(['/account/login'], null, { state: { redirectUrl: state.url } }));\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate({ data }: ActivatedRouteSnapshot): Observable<boolean> {\n    const resource = data.requiredPolicy as string;\n    return this.store.select(ConfigState.getGrantedPolicy(resource));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\nimport { SessionState } from '../states';\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  constructor(private oAuthService: OAuthService, private store: Store) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    this.store.dispatch(new StartLoader(request));\n\n    const headers = {} as any;\n\n    const token = this.oAuthService.getAccessToken();\n    if (!request.headers.has('Authorization') && token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\n    if (!request.headers.has('Accept-Language') && lang) {\n      headers['Accept-Language'] = lang;\n    }\n\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\n    if (!request.headers.has('__tenant') && tenant) {\n      headers['__tenant'] = tenant.id;\n    }\n\n    return next\n      .handle(\n        request.clone({\n          setHeaders: headers,\n        }),\n      )\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\n  }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport namespace Rest {\n  export interface Config {\n    throwErr?: boolean;\n    observe?: Observe;\n  }\n\n  export const enum Observe {\n    Body = 'body',\n    Events = 'events',\n    Response = 'response',\n  }\n\n  export const enum ResponseType {\n    ArrayBuffer = 'arraybuffer',\n    Blob = 'blob',\n    JSON = 'json',\n    Text = 'text',\n  }\n\n  export interface Request<T> {\n    body?: T;\n    headers?:\n      | HttpHeaders\n      | {\n          [header: string]: string | string[];\n        };\n    method: string;\n    params?:\n      | HttpParams\n      | {\n          [param: string]: any;\n        };\n    reportProgress?: boolean;\n    responseType?: ResponseType;\n    url: string;\n    withCredentials?: boolean;\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\nimport { actionMatcher, InitState, NgxsNextPluginFn, NgxsPlugin, setValue, UpdateState } from '@ngxs/store';\nimport snq from 'snq';\nimport { ABP } from '../models';\nimport { organizeRoutes } from '../utils/route-utils';\n\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\n\n@Injectable()\nexport class ConfigPlugin implements NgxsPlugin {\n  private initialized: boolean = false;\n\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root, private router: Router) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    const matches = actionMatcher(event);\n    const isInitAction = matches(InitState) || matches(UpdateState);\n\n    // const layouts = snq(() => this.options.requirements.layouts.filter(layout => layout instanceof Type), []);\n    if (isInitAction && !this.initialized) {\n      let { routes, wrappers } = transformRoutes(this.router.config);\n      routes = organizeRoutes(routes, wrappers);\n\n      state = setValue(state, 'ConfigState', {\n        ...(state.ConfigState && { ...state.ConfigState }),\n        ...this.options,\n        routes,\n      });\n\n      this.initialized = true;\n    }\n\n    return next(state, event);\n  }\n}\n\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\n  const abpRoutes: ABP.FullRoute[] = routes\n    .filter(route => {\n      return snq(() => route.data.routes.find(r => r.path === route.path), false);\n    })\n    .reduce((acc, val) => [...acc, ...val.data.routes], []);\n\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\n  const transformed = [] as ABP.FullRoute[];\n  routes\n    .filter(route => (route.data || {}).routes && (route.component || route.loadChildren))\n    .forEach(route => {\n      const abpPackage = abpRoutes.find(\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && snq(() => route.data.routes.length, false),\n      );\n      const { length } = transformed;\n\n      if (abpPackage) {\n        transformed.push(abpPackage);\n      }\n\n      if (transformed.length === length) {\n        transformed.push({\n          path: route.path,\n          name: snq(() => route.data.routes.name, route.path),\n          children: route.data.routes.children || [],\n        } as ABP.FullRoute);\n      }\n    });\n\n  return { routes: setUrls(transformed), wrappers };\n}\n\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\n  if (parentUrl) {\n    // this if block using for only recursive call\n\n    return routes.map(route => ({\n      ...route,\n      url: `${parentUrl}/${route.path}`,\n      ...(route.children &&\n        route.children.length && {\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\n        }),\n    }));\n  }\n\n  return routes.map(route => ({\n    ...route,\n    url: `/${route.path}`,\n    ...(route.children &&\n      route.children.length && {\n        children: setUrls(route.children, `/${route.path}`),\n      }),\n  }));\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  constructor(private store: Store) {}\n\n  getAll() {\n    return this.store.selectSnapshot(ConfigState.getAll);\n  }\n\n  getOne(key: string) {\n    return this.store.selectSnapshot(ConfigState.getOne(key));\n  }\n\n  getDeep(keys: string[] | string) {\n    return this.store.selectSnapshot(ConfigState.getDeep(keys));\n  }\n\n  getSetting(key: string) {\n    return this.store.selectSnapshot(ConfigState.getSetting(key));\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { uuid } from '../utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyLoadService {\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\n\n  load(\n    url: string,\n    type: 'script' | 'style',\n    content: string = '',\n    targetQuery: string = 'body',\n    position: InsertPosition = 'afterend',\n  ): Observable<void> {\n    if (!url && !content) return;\n    const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\n\n    if (this.loadedLibraries[key]) {\n      return this.loadedLibraries[key].asObservable();\n    }\n\n    this.loadedLibraries[key] = new ReplaySubject();\n\n    let library;\n    if (type === 'script') {\n      library = document.createElement('script');\n      library.type = 'text/javascript';\n      if (url) {\n        (library as HTMLScriptElement).src = url;\n      }\n\n      (library as HTMLScriptElement).text = content;\n    } else if (url) {\n      library = document.createElement('link');\n      library.type = 'text/css';\n      (library as HTMLLinkElement).rel = 'stylesheet';\n\n      if (url) {\n        (library as HTMLLinkElement).href = url;\n      }\n    } else {\n      library = document.createElement('style');\n      (library as HTMLStyleElement).textContent = content;\n    }\n\n    library.onload = () => {\n      this.loadedLibraries[key].next();\n      this.loadedLibraries[key].complete();\n    };\n\n    document.querySelector(targetQuery).insertAdjacentElement(position, library);\n\n    return this.loadedLibraries[key].asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class LocalizationService {\n  constructor(private store: Store) {}\n\n  get(keys: string, ...interpolateParams: string[]): Observable<string> {\n    return this.store.select(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n\n  instant(keys: string, ...interpolateParams: string[]): string {\n    return this.store.selectSnapshot(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Config } from '../models';\n\nexport function environmentFactory(environment: Config.Environment) {\n  return {\n    ...environment,\n  };\n}\n\nexport function configFactory(config: Config.Requirements) {\n  return {\n    ...config,\n  };\n}\n\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\n\nexport const CONFIG = new InjectionToken('CONFIG');\n","import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Pipe({\n  name: 'abpLocalization',\n  pure: false, // required to update the value\n})\nexport class LocalizationPipe implements PipeTransform, OnDestroy {\n  initialized: boolean = false;\n\n  value: string;\n\n  constructor(private store: Store) {}\n\n  transform(value: string, ...interpolateParams: string[]): string {\n    if (!this.initialized) {\n      this.initialized = true;\n\n      this.store\n        .select(\n          ConfigState.getCopy(\n            value,\n            ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\n          ),\n        )\n        .pipe(\n          takeUntilDestroy(this),\n          distinctUntilChanged(),\n        )\n        .subscribe(copy => (this.value = copy));\n    }\n\n    return this.value;\n  }\n\n  ngOnDestroy() {}\n}\n","import { Directive, Output, Renderer2, ElementRef, OnInit, EventEmitter, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  selector: '[input.debounce]',\n})\nexport class InputEventDebounceDirective implements OnInit {\n  @Input() debounce: number = 300;\n\n  @Output('input.debounce') debounceEvent = new EventEmitter<Event>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'input')\n      .pipe(\n        debounceTime(this.debounce),\n        takeUntilDestroy(this),\n      )\n      .subscribe((event: Event) => {\n        this.debounceEvent.emit(event);\n      });\n  }\n}\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, Renderer2 } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  selector: '[click.stop]',\n})\nexport class ClickEventStopPropagationDirective implements OnInit {\n  @Output('click.stop') stopPropEvent = new EventEmitter<MouseEvent>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'click')\n      .pipe(takeUntilDestroy(this))\n      .subscribe((event: MouseEvent) => {\n        event.stopPropagation();\n        this.stopPropEvent.emit(event);\n      });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\nimport { RouterOutletComponent } from './components/router-outlet.component';\nimport { PermissionDirective } from './directives/permission.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { ApiInterceptor } from './interceptors/api.interceptor';\nimport { ABP } from './models/common';\nimport { LocalizationPipe } from './pipes/localization.pipe';\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\nimport { ConfigState } from './states/config.state';\nimport { ProfileState } from './states/profile.state';\nimport { SessionState } from './states/session.state';\nimport { getInitialData } from './utils/initial-utils';\nimport { EllipsisDirective } from './directives/ellipsis.directive';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\nimport { ClickEventStopPropagationDirective } from './directives/stop-propagation.directive';\n\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([ProfileState, SessionState, ConfigState]),\n    NgxsStoragePluginModule.forRoot({ key: 'SessionState' }),\n    NgxsRouterPluginModule.forRoot(),\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    LocalizationPipe,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    ClickEventStopPropagationDirective,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    LocalizationPipe,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    LocalizationPipe,\n    ClickEventStopPropagationDirective,\n  ],\n  providers: [LocalizationPipe],\n  entryComponents: [RouterOutletComponent, DynamicLayoutComponent],\n})\nexport class CoreModule {\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: ConfigPlugin,\n          multi: true,\n        },\n        {\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ApiInterceptor,\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: getInitialData,\n        },\n      ],\n    };\n  }\n}\n"]}