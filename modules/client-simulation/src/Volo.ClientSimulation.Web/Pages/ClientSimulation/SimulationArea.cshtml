@page "{handler?}"
@{
    Layout = null;
}
@using Volo.ClientSimulation
@using Volo.ClientSimulation.Clients
@using Volo.ClientSimulation.Pages.ClientSimulation
@model Volo.ClientSimulation.Pages.ClientSimulation.SimulationAreaModel
<abp-alert alert-type="Primary">
    <form class="d-inline" id="StartButtonForm" method="post" asp-page-handler="Start" data-ajaxForm="true">
        <abp-button button-type="Primary" type="submit" disabled="@(Model.Snapshot.State != SimulationState.Stopped)">Start</abp-button>
    </form>
    <form class="d-inline" id="StopButtonForm" method="post" asp-page-handler="Stop" data-ajaxForm="true">
        <abp-button button-type="Primary" type="submit" disabled="@(Model.Snapshot.State != SimulationState.Started)">Stop</abp-button>
    </form>
    <span class="ml-3">
        @Model.Snapshot.State
    </span>
</abp-alert>
<abp-card class="mt-3">
    <abp-card-header>
        Clients
    </abp-card-header>
    <abp-card-body>
        @foreach (var client in Model.Snapshot.Clients)
        {
            <span class="simulation-client simulation-client-@client.State.ToString().ToLowerInvariant()">
                <span class="simulation-client-icon">
                    @if (client.State == ClientState.Running)
                    {
                        <i class="fa fa-play"></i>
                    }
                    else if (client.State == ClientState.Stopping)
                    {
                        <i class="fa fa-eject"></i>
                    }
                    else if (client.State == ClientState.Stopped)
                    {
                        <i class="fa fa-stop"></i>
                    }
                </span>
                <span class="simulation-client-scenario">
                    @client.Scenario.DisplayText
                </span>
                <span class="simulation-client-scenario-current-step">
                    @if (client.State != ClientState.Stopped)
                    {
                        <text>| @client.Scenario.CurrentStep.DisplayText</text>
                    }
                </span>
            </span>
        }
    </abp-card-body>
</abp-card>
<abp-card class="mt-3">
    <abp-card-header>
        Scenarios
    </abp-card-header>
    <abp-card-body>
        <abp-row>
            @foreach (var scenario in Model.Snapshot.Scenarios)
            {
                <abp-column size-md="_6">
                    <abp-card>
                        <abp-card-header>
                            @scenario.DisplayText
                        </abp-card-header>
                        <abp-card-body>
                            <pre>
@foreach (var step in scenario.Steps)
{
    <text>@step.DisplayText: E: @step.ExecutionCount | S: @step.SuccessCount | A: @step.AvgExecutionDuration.ToString("0.00") ms. </text>@Environment.NewLine
}
</pre>
                        </abp-card-body>
                    </abp-card>
                </abp-column>
            }
        </abp-row>
    </abp-card-body>
</abp-card>