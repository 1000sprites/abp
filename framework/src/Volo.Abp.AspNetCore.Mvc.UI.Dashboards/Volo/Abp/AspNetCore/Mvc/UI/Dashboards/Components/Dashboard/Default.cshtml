@using Localization.Resources.AbpUi
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Dashboards
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets
@inject IAuthorizationService AuthorizationService
@inject IWidgetRenderer WidgetRenderer
@inject IGlobalFilterRenderer GlobalFilteRenderer
@inject IHtmlLocalizer<AbpUiResource> L
@model Volo.Abp.AspNetCore.Mvc.UI.Dashboards.Components.Dashboard.DashboardViewModel
@{
}

<abp-row class="mb-4">
    <form id="DashboardGlobalFiltersForm">
        @foreach (var globalFilterConfiguration in Model.Dashboard.AvailableGlobalFilters)
        {
            var globalFilter = Model.GetGlobalFilter(globalFilterConfiguration.GlobalFilterName);

            @await GlobalFilteRenderer.RenderAsync(Component, globalFilter.Name)

        }
        @if (Model.Dashboard.AvailableGlobalFilters.Any())
        {
        <div class="float-right">
            <abp-button button-type="Success" text="@L["Refresh"].Value" id="GlobalRefreshButton" />
        </div>
        }
    </form>
</abp-row>

<abp-row>
    @foreach (var widgetConfiguration in Model.Dashboard.AvailableWidgets)
    {
        var widgetDefinition = Model.GetWidget(widgetConfiguration.WidgetName);
        if (await Model.CheckPermissionsAsync(AuthorizationService, widgetDefinition))
        {
            widgetDefinition.DefaultDimensions = widgetConfiguration.Dimensions ?? widgetDefinition.DefaultDimensions ?? new WidgetDimensions(6, 4);

            <abp-column class="col-@(widgetDefinition.DefaultDimensions.Width) p-2"
                        style="height: @(widgetDefinition.DefaultDimensions.Height * 100)px">

                @await WidgetRenderer.RenderAsync(Component, widgetDefinition.Name)
            </abp-column>
        }
    }
</abp-row>